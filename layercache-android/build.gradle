/*
 * Copyright 2017 Appmattus Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: "$rootDir/jacoco-android.gradle"
apply from: "$rootDir/bintray.gradle"
apply from: "$rootDir/dokka-android.gradle"

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            multiDexEnabled true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "$rootDir/proguard-rules.pro"
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testBuildType "debug"
}

tasks.withType(Test) {
    systemProperty "kotlinx.coroutines.blocking.checker", "disable"
}

repositories {
    mavenLocal()
}

dependencies {
    api project(':layercache')
    implementation 'com.jakewharton:disklrucache:2.0.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    testImplementation project(':testutils')
    testImplementation 'org.robolectric:robolectric:3.8'
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}
